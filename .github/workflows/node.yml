name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      mssql:
        image: mcr.microsoft.com/mssql/server
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: integrator!23
        ports:
          - 1433:1433
        options: >-
          --name=mssql
          --health-cmd="/opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P 'integrator!23' -Q 'SELECT 1'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
      postgres:
        image: postgres
        env:
          POSTGRES_USER: integrator
          POSTGRES_DB: Integrator
          POSTGRES_PASSWORD: integrator!23
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      mysql:
        image: mysql:8.0.33
        env:
          MYSQL_ROOT_PASSWORD: integrator!23
          MYSQL_USER: integrator
          MYSQL_PASSWORD: integrator!23
          MYSQL_DATABASE: Integrator
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

    strategy:
      matrix:
        node-version: [16.x, 18.x, 19.x, 20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Lint code
      run: npm run lint
    - name: Run tests
      run: npm test

  publish-npm:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 18.x
          registry-url: https://registry.npmjs.org/
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}
